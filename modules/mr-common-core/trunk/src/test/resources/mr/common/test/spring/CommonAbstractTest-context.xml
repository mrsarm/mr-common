<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd"
    default-autowire="no">


    <!--
        Configurer that replaces ${...} placeholders with values from a properties file
        & properties accesor to be injected in the services
    -->
    <bean id="properties" class="mr.common.spring.utils.RecursivePropertiesFactoryBean"
          p:ignoreUnresolvablePlaceholders="true" p:order="10" lazy-init="false"
          p:systemPropertiesModeName="SYSTEM_PROPERTIES_MODE_OVERRIDE">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
				<value>classpath:app1.properties</value>
				<value>classpath:app2.properties</value>
            </list>
        </property>
        <property name="localOverride" value="true" />
    </bean>

	<!--
	    Con el método #get(String) de este bean se puede acceder estáticamente
	    a cualquier objecto de contexto
     -->
	<bean id="bean" class="mr.common.context.spring.Bean" factory-method="instance" />

</beans>
